@use 'sass:math';
@use 'sass:color';
@use 'sass:meta';
@use 'sass:map';

@tailwind base;
@tailwind components;
@tailwind utilities;

// Modern Sass variables with better naming and scoping
$theme: (
  primary: #3498db,
  secondary: #2ecc71,
  background: #f4f4f4,
  text: #333333,
);

// Improved mixin with default parameters
@mixin flex-center($justify: center, $align: center) {
  display: flex;
  justify-content: #{$justify};
  align-items: #{$align};
}

// Function to get theme color
@function theme-color($key) {
  @return map.get($theme, $key);
}

// Global styles with improved nesting and theming
:root {
  // CSS variables from Sass map
  @each $name, $color in $theme {
    --color-#{$name}: #{$color};
  }
}

body {
  font-family: var(--font-inter), sans-serif;
  @apply antialiased;
  background-color: theme-color(background);
  color: theme-color(text);

  // Dark mode with improved contrast
  &.dark-mode {
    background-color: color.adjust(theme-color(background), $lightness: -60%);
    color: color.adjust(theme-color(text), $lightness: 80%);
  }
}

// Responsive and accessible typography
@mixin fluid-type($min-width, $max-width, $min-font, $max-font) {
  $min-width-em: math.div($min-width, 16) * 1em;
  $max-width-em: math.div($max-width, 16) * 1em;

  font-size: $min-font;

  @media screen and (min-width: $min-width-em) {
    font-size: calc(
      #{$min-font} +
        #{math.div($max-font - $min-font, $max-width - $min-width)} *
        (100vw - #{$min-width-em})
    );
  }

  @media screen and (min-width: $max-width-em) {
    font-size: $max-font;
  }
}

// Utility classes with Sass logic
@each $size in (sm, md, lg, xl) {
  .text-#{$size} {
    @if $size == sm {
      @include fluid-type(320, 768, 14px, 16px);
    } @else if $size == md {
      @include fluid-type(320, 768, 16px, 18px);
    } @else if $size == lg {
      @include fluid-type(320, 768, 18px, 22px);
    } @else {
      @include fluid-type(320, 768, 22px, 28px);
    }
  }
}

// Accessibility and interaction
.interactive {
  @apply text-primary transition-all duration-300 ease-in-out;

  &:hover,
  &:focus {
    transform: scale(1.05);
    outline: 2px solid theme-color(primary);
  }

  &:active {
    transform: scale(0.95);
  }
}
